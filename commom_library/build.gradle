apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (merge.toBoolean()) {
            } else {
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    def libs = rootProject.ext.dependencies
    api rootProject.ext.support["design"]
    api rootProject.ext.support["appcompat-v7"]
    api project(':res_library')
    //阿里路由框架
    api libs.arouter_api
    api libs.rxpermission
    api libs.zxing
    api libs.autolayout
    //rxjava
    api libs.rxjava
    api libs.rxandroid
    //rx管理View的生命周期
    api libs.rxlifecycle
    api libs.rxlifecycle_components
    api libs.rxbinding
    api libs.okhttp
    api libs.retrofit
    api libs.converter_gson
    api libs.adapter_rxjava
    api libs.glide
    annotationProcessor libs.glide_compiler
    api libs.gson
    //recyclerview的databinding套装
    api libs.bindingcollectionadapter
    api(libs.bindingcollectionadapter_recyclerview) {
        exclude group: 'com.android.support'
    }
    //Google LiveData和ViewModel组件
    api libs.lifecycle_extensions
    annotationProcessor libs.lifecycle_compiler
}
